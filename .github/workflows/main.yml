name: Push

on:
  push:
    branches: [ "develop", "master" ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub!"
      - uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned."
      - run: echo "Setting up JDK" 
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - run: echo "The workflow is now ready to test your code."
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - run: echo "Building Debug APK."  
      - name: Build with Gradle
        run: ./gradlew build
      - run: echo "Build status report=${{ job.status }}."

  bundle:
    name: Generate APK
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build APK
        run: ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Create GitHub Release
    needs: bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v1.0
          release_name: Release v1.0
          body: Automated release generated by GitHub Actions.
          draft: false
          prerelease: false
      - name: Upload APK to Release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
